package com.pipecrafts.redisplayaround.config;

import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import org.springframework.cache.interceptor.SimpleKeyGenerator;

import java.lang.reflect.Method;

public class MethodAwareCacheKeyGenerator extends SimpleKeyGenerator {

  @ToString(of = {"simpleKey", "methodName"})
  @EqualsAndHashCode
  @AllArgsConstructor
  public static class MethodAwareCacheKey {

    /**
     * Key as generated by the SimpleKeyGenerator
     */
    Object simpleKey;

    /**
     * Fully qualified method name (including class)
     */
    String methodName;
  }

  @Override
  public Object generate(Object target, Method method, Object... params) {
    Object key = super.generate(target, method, params);
    String className = method.getDeclaringClass().getSimpleName();
    String methodName = method.getName();

    return new MethodAwareCacheKey(key, String.format("%s.%s", className, method));
//    return String.format("%s_%s",
//      target.getClass().getSimpleName(),
////      method.getName(),
//      StringUtils.arrayToDelimitedString(params, "_"));

  }
}
